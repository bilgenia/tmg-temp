@use '../../global' as g;
@use 'sass:map';

// アイコン設定をマップで管理（mask版）
$button-icons: (
    'default': ('mask': url('@/img/icon_button_normal.svg'), 'size': g.rem(10.1) g.rem(20.2)),
    'download': ('mask': url('@/img/icon_button_download.svg'), 'size': g.rem(18.25) g.rem(16.85)),
    'blank': ('mask': url('@/img/icon_button_blank.svg'), 'size': g.rem(22.66) g.rem(17.4)),
    'tel': ('mask': url('@/img/icon_button_tel.svg'), 'size': g.rem(32) g.rem(36)),
);

// アイコン設定のみを返すmixin（mask版）
@mixin get-button-icon($type: 'default', $color: var(--root--color-button-text)) {
    $config: map.get($button-icons, $type);
    
    // maskでアイコンの形状を定義
    mask-image: map.get($config, 'mask');
    mask-size: map.get($config, 'size');
    mask-repeat: no-repeat;
    mask-position: center;
    
    // Webkit用のベンダープレフィックス
    -webkit-mask-image: map.get($config, 'mask');
    -webkit-mask-size: map.get($config, 'size');
    -webkit-mask-repeat: no-repeat;
    -webkit-mask-position: center;
    
    // 背景色でアイコンの色を制御
    background-color: $color;
    background-image: none;
}

// ==============================================================================================================
//  RESET
// ==============================================================================================================

// SnowMonkeyのデフォルト設定を上書き
.smb-btn:not(:root) {
    color: var(--root--color-button-text);
    background: var(--root--color-button);
}

// ホバー時のフィルターを解除
@media (hover: hover) and (pointer:fine) {
    .smb-btn {

        &:active,
        &:focus,
        &:hover {
            filter: none;
        }
    }
}


// ==============================================================================================================
//  SMB BUTTONS
// ==============================================================================================================

.smb-buttons {
    gap: g.rem(23) g.rem(33);
}

.smb-btn-wrapper {
    position: relative;

    // --full修飾子：常に幅100%
    &--full {
        width: 100%;
    }
}

.smb-btn {
    position: relative;
    display: flex;
    align-items: center;
    color: var(--root--color-button-text);
    background: var(--root--color-button);
    font-size: g.rem(16);
    text-align: center;
    white-space: wrap;
    line-height: 1.5;
    min-height: g.rem(60);
    border: 0;
    border-radius: 0;

    // 文字の部分
    &__label {
        font-weight: var(--root--fontWeight-bold);
        word-break: break-all;
        padding-inline: g.rem(37.6);
        margin-inline: 0;
    }

    // サイズ関連
    &:not([class*="--"]) {
        padding-inline: g.rem(30);
    }

    // アイコン基本設定(中央配置)
    &::before {
        content: '';
        position: absolute;
        right: 0;
        display: block;
        width: g.rem(27.2);
        height: g.rem(27.2);
        background-position: center center;
        background-repeat: no-repeat;
        margin-right: g.rem(14.8);
        // デフォルトアイコン設定（mask版）
        @include get-button-icon('default', var(--root--color-button-text));

        @include g.mq(sp) {
            width: g.rem(28);
            height: g.rem(28);
            margin-inline: auto g.rem(15);
        }
    }

    // 電話番号の時
    &[href*="tel:"] {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: g.rem(24);
        font-weight: var(--root--fontWeight-bold);
        line-height: 1;
        text-decoration: none;
        color: var(--root--color-button-text);
        background: var(--root--color-button);
        width: 100%;
        text-align: center;

        @include g.mq(pc) {
            display: inline-flex;
            background: none;
            width: auto;
            min-width: initial;
            color: var(--root--color-button);
        }

        &:before {
            position: relative;
            inset: auto;
            flex-shrink: 0;
            content: '';
            display: block;
            width: g.rem(36);
            height: g.rem(36);
            margin-inline: 0 g.rem(30);
            @include get-button-icon('tel', var(--root--color-button-text));

            @include g.mq(pc) {
                @include get-button-icon('tel', var(--root--color-button));
                margin: 0 g.rem(8) 0 0;
            }

        }
        .smb-btn__label {
            padding: 0;
        }
    }

    // 別窓の場合
    &[target='_blank'] {
        &::before {
            @include get-button-icon('blank', var(--root--color-button-text));
            margin-block: auto;
        }
    }

    // ダウンロード系ファイルの場合
    &[href$='.xlsx'],
    &[href$='.png'],
    &[href$='.jpeg'],
    &[href$='.jpg'],
    &[href$='.gif'],
    &[href$='.pdf'] {
        &::before {
            @include get-button-icon('download', var(--root--color-button-text));
            margin-block: auto;
        }
    }

    // ホバー時の透明度
    &:hover {
        opacity: 0.77;
    }

    // ホーム判定の時に最小値変更
    [data-home-page-container="true"] & {
        @include g.mq(pc) {
            min-width: g.rem(350);
        }
    }
}